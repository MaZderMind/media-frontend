!!! 5
%html
  %head
    %title
      C3TV -
      = h @item[:title]
    = render '/partials/header'
    %link{href: '/assets/css/mediaelementplayer.min.css', type: 'text/css', rel: 'stylesheet'}
  %body
    = render '/partials/navbar'

    %div.container-fluid

      %h1
        =  h @item[:event].title
      - if @item[:event].subtitle
        %h2
          = h @item[:event].subtitle

      %ul.nav.nav-tabs.nav-justified{role: 'tablist', 'data-tabs' => 'tabs'}
        %li.active
          %a{href: '#video', role: 'tab', 'data-toggle' => 'tab'} Video
        %li 
          %a{href: '#audio', role: 'tab', 'data-toggle' => 'tab'} Audio
        %li
          %a{href: '#download', role: 'tab', 'data-toggle' => 'tab'} Download
          
      .tab-content
        #video.tab-pane.active
          - if @item[:video_recordings].present?
            - r = @item[:video_recordings].first
            %video.video{controls: 'controls', poster: h(@item[:event].poster_url), width: aspect_ratio_width, height: aspect_ratio_height}
              - @item[:video_recordings].each do |recording|
                %source{type: recording.mime_type, src: h(recording.url)}
              %object{ width: aspect_ratio_width, height: aspect_ratio_height, type: 'application/x-shockwave-flash', data: '/assets/flashmediaelement.swf' }
                %param{ name: 'allowFullScreen', value: 'true' }
                %param{ name: 'flashvars', value: "controls=true&file=#{flash(@item[:video_recordings])}" }

        #audio.tab-pane
          - if @item[:audio_recordings].present?
            %audio.audio{controls: 'true', width: '100%'}
              - @item[:audio_recordings].each do |recording|
                %source{type: recording.mime_type, src: h(recording.url)}

        #download.tab-pane
          %p
            %b Directory: 
            %a{href: @item[:conference].recordings_url}
              = @item[:conference].recordings_path
              
            %ul
              - @item[:video_recordings].each do |recording|
                %li
                  %a{href: recording.url}
                    = recording.filename
                %li
                  %a{href: recording.torrent_url}
                    = recording.filename + '.torrent'
            %ul
              - @item[:audio_recordings].each do |recording|
                %li
                  %a{href: recording.url}
                    = recording.filename
                %li
                  %a{href: recording.torrent_url}
                    = recording.filename + '.torrent'

      %span
        Views: #{@item[:event].view_count}

      %p.meta.top-space
        / index
        %b About:
        %a{href: @item[:event].link} 
          = h @item[:event].title

        %span.small
          from 
          = date(@item[:event])

      %p.description

        = yield

          
      - if @item[:event].persons.present?
        %p.persons
          %b Persons
          %ul
            - @item[:event].persons.each do |person|
              %li= h person

    = render '/partials/footer'

    %script(src='/assets/js/jquery.min.js')
    %script(src='/assets/js/bootstrap.min.js')
    %script(src='/assets/js/mediaelement-and-player.min.js')

    :javascript
      $('video').mediaelementplayer({
        usePluginFullScreen: true,

        pluginPath: '/assets/',
        enableAutosize: true,
        success: function (mediaElement) {
          mediaElement.addEventListener('playing', function () {
            $.post("http://api.media.ccc.de/public/recordings/count", {event_id: #{@item[:event].id},src: mediaElement.src});
          }, false);
        }
      });
      $('audio').mediaelementplayer();
