#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/stylesheet/' do
  # don’t filter or layout
end

compile '/folder/*/page/*/' do
  layout 'page'
end

compile '/folder/*/' do
  layout 'folder'
end

# /
compile '*' do
  unless item.binary?
    case item[:extension]
    when 'haml'
      filter :haml, { :ugly => true, autoclose: ['<source>'], format: :xhtml }
      layout 'default'
      filter :relativize_paths, :type => :html
    else
      nil
    end
  end
end

#
# Routes
#

route '/stylesheet/' do
  '/style.css'
end

route '/folder/*/page/' do
  # skip
end

route '/folder/*/page/*/' do
  item.identifier.chop.sub(%r'/folder/', '/browse/').sub(%r'/page/', '/') + '.' + 'html'
end

route '/folder/' do
  # skip
end

route '/folder/*/' do
  item.identifier.sub(%r'/folder/', '/browse/') + 'index.html'
end

route '/about/' do
  '/about.html'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml, {:ugly => true, :autoclose => ['<source>', '<audio>', '<video>'], format: :xhtml}
